CODICE UTILE

ESEMPIO COMANDO DA INSERIRE PER ESEGUIRE L'EXPORT DELLA COLLECTION DEI FILM:
mongoexport --collection=FilmCollection --db=DBProva --out=Films.csv --type=csv --fields=_id,Description,Title,PublicationDate,Rating,Genres,Directors,Actors,RecentComments


INSERT FILM CREATI AD HOC:
db.NomeCollection.insert({Description: "descrizione", Title: "titolo 1", PublicationDate: 1996, Rating: 6.0, Genres:["Horror", "Roba"], Directors: ["Quentin Tarantella", "Christopher Volano"], Actors: ["George Clooney", "Boh"], RecentComments:[{idUser: "783649462983yehjwkfebk","Timestamp" : ISODate("2019-12-29T18:22:19.768Z"), Text: "nfresiofvpnfdvfd" }, {idUser: "783649462983yehjwkfebk","Timestamp" : ISODate("2019-12-29T18:22:19.768Z"), Text: "nfresiofvpnfdvfd" }] })

IMPORT PER IL CLUSTER:

mongoimport --host LsmsdCluster-shard-0/lsmsdcluster-shard-00-00-yeauu.mongodb.net:27017,lsmsdcluster-shard-00-01-yeauu.mongodb.net:27017,lsmsdcluster-shard-00-02-yeauu.mongodb.net:27017 --ssl --username root --password root --authenticationDatabase admin --db PisaFlix --collection NOMEDELLACOLLECTION --type csv --file SPECIFICARE PERCORSO PER IL FILE DA INSERIRE --headerline

CONNESSIONE AL CLUSTER CON MONGOSHELL

mongo "mongodb+srv://lsmsdcluster-yeauu.mongodb.net/test" --username root --password root


COMANDO PER AGGIUSTARE LE DATE

var ops = []; db.FilmCollection.find({ "PublicationDate": { "$type": 2} }).forEach(doc => { var date = new Date(doc.PublicationDate); ops.push({ "updateOne": { "filter": { "_id": doc._id }, "update": { "$set": { "PublicationDate": date } }}}); }); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}


COMANDO PER AGGIUSTARE I COMMENTI

var ops = []; db.FilmCollection.find({ "RecentComments": { "$type": 2} }).forEach(doc => { var commenti = new Array(); ops.push({"updateOne": {"filter": { "_id": doc._id },"update": { "$set": { "RecentComments": commenti } }}}); if ( ops.length >= 1000 ) { db.FilmCollection.bulkWrite(ops); ops = []; }}); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}


COMANDO PER AGGIUSTARE I GENERI

var ops = []; db.FilmCollection.find({ "Genres": { "$type": 2} }).forEach(doc => {var generi; if (doc.Genres.valueOf() == ''){generi = null;} else{ generi = doc.Genres.split(',').map( e => e.replace(/"|\[|\]|\\/gm,'').toString());} ops.push({"updateOne": {"filter": { "_id": doc._id },"update": { "$set": { "Genres": generi } }}}); if ( ops.length >= 1000 ) {db.FilmCollection.bulkWrite(ops); ops = [];}}); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}

COMANDO PER AGGIUSTARE I REGISTI

var ops = []; db.FilmCollection.find({ "Directors": { "$type": 2} }).forEach(doc => {var registi; if(doc.Directors.valueOf() == ''){registi = null;} else{ registi = doc.Directors.split(',').map( e => e.replace(/"|\[|\]|\\/gm,'').toString());} ops.push({"updateOne": {"filter": { "_id": doc._id },"update": { "$set": { "Directors": registi } }}}); if ( ops.length >= 1000 ) {db.FilmCollection.bulkWrite(ops); ops = [];}}); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}


COMANDO PER AGGIUSTARE GLI ATTORI

var ops = []; db.FilmCollection.find({ "Cast": { "$type": 2} }).forEach(doc => {var attori; if(doc.Cast.valueOf() == ''){ attori = null;} else{ attori = doc.Cast.split(',').map( e => e.replace(/"|\[|\]|\\/gm,'').toString());} ops.push({"updateOne": {"filter": { "_id": doc._id },"update": { "$set": { "Cast": attori } }}}); if ( ops.length >= 1000 ) {db.FilmCollection.bulkWrite(ops); ops = [];}}); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}


COMANDO ORIGINALE:

var ops = [];
db.testcol.find({ "children": { "$type": 2} }).forEach(doc => {
  var children = doc.children.split(',').map( e => e.replace(/"|\[|\]|\\/gm,'').toString() );
  ops.push({
    "updateOne": {
      "filter": { "_id": doc._id },
      "update": { "$set": { "children": children } }
    }
  });

  if ( ops.length >= 1000 ) {
    db.newcol.bulkWrite(ops);
    ops = [];
  }             
});

if ( ops.length > 0 ) {
  db.newcol.bulkWrite(ops);
  ops = [];
}



 
var ops = []; db.FilmCollection.find({ "Genres": { "$exists": true} }).forEach(doc => {var generi = doc.Genres.trim(); ops.push({"updateOne": {"filter": { "_id": doc._id },"update": { "$set": { "Genres": generi } }}}); if ( ops.length >= 1000 ) {db.FilmCollection.bulkWrite(ops); ops = [];}}); if ( ops.length > 0 ) { db.FilmCollection.bulkWrite(ops); ops = [];}



